run:
  timeout: 5m
  modules-download-mode: readonly
  tests: false
#  skip-dirs:
#    - internal/mock/fixture

# golangci.com configuration
# https://github.com/golangci/golangci/wiki/Configuration
service:
  golangci-lint-version: 1.35.x # use the fixed version to not introduce new linters unexpectedly

linters-settings:
  gofmt:
    simplify: true
  govet:
    check-shadowing: true
    enable-all: true
  errcheck:
    check-blank: true
  funlen:
    lines: 150
    statements: 80
  nestif:
    # minimal complexity of if statements to report, 5 by default
    min-complexity: 3
  lll:
    # max line length, lines longer will be reported. Default is 120.
    # '\t' is counted as 1 character by default, and can be changed with the tab-width option
    line-length: 180
  maligned:
    # print struct with more effective memory layout or not, false by default
    suggest-new: true
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped
  gomnd:
    settings:
      mnd:
        # don't include the "operation" and "assign"
        checks: argument,case,condition,return
  gocritic:
    enabled-tags:
      - diagnostic
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
    settings:
      rangeValCopy:
        sizeThreshold: 512
      hugeParam:
        sizeThreshold: 512
  depguard:
    list-type: blacklist
    include-go-root: false
    packages:
      - github.com/sirupsen/logrus
    packages-with-error-message:
      # specify an error message to output when a blacklisted package is used
      - github.com/sirupsen/logrus: "logging is allowed only by uber zap (upstream dependency)"

linters:
  disable-all: true
  enable:
    - bodyclose
    - deadcode
    - depguard
    - dogsled
    - errcheck
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - golint
    - gomnd
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - interfacer
    - lll
    - misspell
    - nakedret
    - nolintlint
    - rowserrcheck
    - scopelint
    - staticcheck
    - structcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
    - whitespace
    - goimports
  # don't enable:
  # - dupl
  # - asciicheck
  # - exhaustive (TODO: enable after next release; current release at time of writing is v1.27)
  # - gochecknoglobals
  # - gocognit
  # - godot
  # - godox
  # - goerr113
  # - maligned
  # - nestif
  # - noctx (TODO: enable after next release; current release at time of writing is v1.27)
  # - prealloc
  # - testpackage
  # - wsl

issues:
  exclude-rules:
    #    - linters:
    #        # ignore unused warnings from enterprise code
    #        # add more as required.
    #        - unused
    #      text: "RedisSupplier|LocalCacheSupplier|Enterprise"

    # Exclude lll issues for long lines with go:generate
    - path: _test\.go
      linters:
        - gomnd
    - linters:
        - lll
      source: "^//go:generate "
    # https://github.com/go-critic/go-critic/issues/926
    - linters:
        - gocritic
      text: "unnecessaryDefer:"

